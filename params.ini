[Params]

# Name of the folder for storing training results
tag = tmp

epochs = 4_000
layers = 5
neurons_per_layer = 25
learning_rate = 0.005
use_best_pinn = True

# Equation to use - either "delta" (Dirac delta on RHS) or "ad" (Advection-Diffusion)
equation = ad
# Type of test functions - either "sin" or "poly".
# NOTE: If you have compute_error=True you have to 
# generate functions TWICE, becouse of the way it is
# implemented!
test_func = sin
eps = 1
Xd = 0.5
# beta = 0.2

# Whether to compute error in each iteration will influence performance
compute_error = True
# Number of integration nodes
n_points_x = 200
# Number of integration nodes for computing error. Should be greater than n_points_x
n_points_error = 200
# Number of test functions
n_test_func = 50   
# Integration rule for loss function. Either "trapz" or "midpoint". "simpson" DOES NOT WORK
integration_rule_loss = trapz
# ntegration rule for calculating norm. One of "trapz", "midpoint" or "simpson".
integration_rule_norm = simpson
# Integration rule for calculating error. One of "trapz", "midpoint" or "simpson".
integration_rule_error = midpoint

atol = 1e-22
rtol = 1e-22
